package practice;/** * Batalla Naval - Contar Barcos Dado un tablero de m x n donde cada celda es un acorazado 'X' o un vacío '.', * devuelva el número de los barcos en el tablero. Los barcos sólo pueden colocarse horizontal o verticalmente * en el tablero. * * En otras palabras, sólo pueden tener la forma 1 x k (1 fila, k columnas) o k x 1 (k filas, 1 columna), * donde k puede ser de cualquier tamaño. Al menos una celda horizontal o vertical separa dos barcos * (es decir, no hay barcos adyacentes). * * Ejemplo 1: Entrada: tablero = [["X",".","X"],[".",".","X"],[".",".","X"] Salida: 2 * * Ejemplo 2: Entrada: tablero = [["."]] Salida: 0 */public class NavyBattleFindBoats {    public static void main(String[] args) {       char [][] sea = {{'X','.','X'},                        {'.','.','X'},                        {'.','.','X'}};       int boatCounter = 0;        displaySea(sea);       for (int row = 0; row < sea.length; row++) {           for (int col = 0; col < sea[row].length; col++) {               if(sea[row][col] == 'X'){                   boatCounter++;                   findBoats(sea, row, col);               }           }       }        System.out.println(" ");        System.out.println("Boats found in "+boatCounter+" boats");    }    public static void findBoats(char [][] sea, int row, int col){        int seaTotalRows = sea.length;        int seaTotalCols = sea[0].length;        //return for the base case that row or col are out of bounded.        if (row < 0 || col < 0 || row >= seaTotalRows || col >= seaTotalCols || sea[row][col] == '.') {            return;        }        //Change the value on the sea[row][col] to '.' to don't re-count the boat.        sea[row][col] = '.';        //Explore with findBoats with recursion all sides to find the boat.        findBoats(sea, row + 1, col);        findBoats(sea, row - 1, col);        findBoats(sea, row, col + 1);        findBoats(sea, row, col - 1);    }    public static void displaySea(char[][] image) {        for(int row = 0; row < image.length; row++){            System.out.println('\n');            for(int col = 0; col < image[row].length; col++){                System.out.print(image[row][col] + " ");            }        }    }}